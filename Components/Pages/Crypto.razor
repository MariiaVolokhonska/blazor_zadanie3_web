@page "/crypto"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Globalization
@rendermode InteractiveServer

<h3>Najpopularniejsze kryptowaluty z CoinCap</h3>
@if (assets is null){
    <p>Ladowanie danych...</p>
}
else{
    <table class="table table-striped
table-hover" >
        <thead>
<tr>
            <th>
                Rank
            </th>
            <th>
                Logo
            </th>
            <th>
                Nazwa
            </th>
            <th>
                Symbol
            </th>
            <th>
                Cena (USD)
            </th>
            <th>
                Wolumen 24h (USD)
            </th>
            <th>

            </th>
        </tr>
        </thead>
        <tbody>
            @foreach(var asset in assets){
                <tr>
                    <td>@asset.rank</td>
                    <td><img src="@asset.IconUrl" alt="@asset.symbol" width="32" height="32" onerror="this.onerror=null;this.src='sample-icon.png'"/></td>
                    <td>@asset.name</td>
                    <td>@asset.symbol</td>
                    <td>@(string.Format("${0:N2}", ParseDecimal(asset.priceUSD)))</td>
                    <td>@(ParseDecimal(asset.volumeUSD24Hr).ToString("N0"))</td>
                    <td @onclick="()=>AddToFavourite(asset)" style="cursor: pointer;"><img src="heart.png" width="32" height="32" ></td>

                </tr>
            }
        </tbody>
    </table>
}
<button @onclick="()=>ShowFavourites()">Show favourites</button>

@code{
    public class CoinCapResponse(){
        public List<CoinCapAsset>? data{get;set;}
        public long timestamp;
    }
    private List<CoinCapAsset>? assets;
    private List<CoinCapAsset>? favouriteAssets=new List<CoinCapAsset>();
    private decimal ParseDecimal(string value){
        //string.Format("${0:N2}", TU_LICZBA)
        //TU_LICZBA.ToString("C2", CultureInfo.GetCultureInfo("en-US")
        //CultureInfo.InvariantCulture - norm 

        if (decimal.TryParse(value,NumberStyles.Any, CultureInfo.GetCultureInfo("en-US"),
out var dec))
 {
 return dec;
 }
 return 0;
 }
 protected override async Task OnInitializedAsync(){
    var http= new HttpClient();
    var url="https://api.coincap.io/v2/assets?limit=50";
    var response= await http.GetFromJsonAsync<CoinCapResponse>(url);
    assets=response?.data;

    
 }
private void AddToFavourite(CoinCapAsset asset){
    Console.WriteLine(asset.name);
    favouriteAssets.Add(asset);
}
private void ShowFavourites(){
    foreach(var fav in favouriteAssets){
        Console.WriteLine(fav.name);
    }
}
   
}